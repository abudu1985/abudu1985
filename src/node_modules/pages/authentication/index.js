import React, {useState, useContext} from 'react';
import { withRouter } from 'react-router-dom';
import Input from './../../components/Input';
import RoundButton from './../../components/RoundButton';
//import Logo from './../../components/Logo';
import './style.scss';
import firebase from '../../../firebase';
import {CurrentUserContext} from "contexts/currentUser";


const Authentication = (props) => {

    const [email, setEmail] = useState('')
    const [password, setPassword] = useState('');
    const [, dispatch] = useContext(CurrentUserContext)

    return (
        <div className="login-container">
            <div className="content-container">
                {/*<Logo />*/}
                <form className="login-form" onSubmit={login}>
                    <Input type="email" name="email" placeholder="Email" value={email} onChange={e => setEmail(e.target.value)} required="required" />
                    <Input type="password" name="password" placeholder="Password" value={password} onChange={e => setPassword(e.target.value)} required="required" />
                    <RoundButton
                        type='submit'
                        disabled={false}//{this.props.user.fetching || this.props.user.processing}
                        innerHtml="Log In"/>
                </form>
                {/*{this.props.user.errorMessage || this.state.errorMessage ? <div className="error-message">{this.state.errorMessage || this.props.user.errorMessage}</div> : null}*/}
            </div>
        </div>
    );

    async function login(e) {
        e.preventDefault();
        try {
            await firebase.login(email, password);
            const authenticate = await firebase.isInitialized();
            if (authenticate) {
                dispatch({type: 'SET_AUTHORIZED', payload: authenticate});
                props.history.replace('/dashboard')
            }
        } catch(error) {
            alert(error.message)
        }
    }
};

export default withRouter(Authentication);