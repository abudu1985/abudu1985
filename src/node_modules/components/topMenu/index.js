import React, {useState, useContext, Fragment} from 'react'
import {CurrentUserContext} from 'contexts/currentUser'
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import  faBars  from '@fortawesome/fontawesome-free-solid/faBars'
import {NavLink, withRouter} from "react-router-dom";
import firebase from '../../../firebase';

import Item from './item'
import Lead from './lead'

import './index.css'

const TopMenu = (props) => {
    const [menuClass, setMenuClass] = useState('');
    const [currentUserState, dispatch] = useContext(CurrentUserContext)

    const setToggleTopMenuClass = () => setMenuClass(menuClass ? '' : 'toggled');
    let top_menu_class = `top-menu ${menuClass}`;
console.log(currentUserState);

    return (
        <div>
            <div className={top_menu_class} >
                <Lead text="Newblog" />
                <div className="right">
                    {currentUserState.isLoggedIn && (
                        <Fragment>
                            <div className="top-menu-item">
                                <NavLink to="/articles/new" className="nav-link">
                                   New Post
                                </NavLink>
                            </div>
                            <div className="top-menu-item" onClick={logout}>
                                Logout
                            </div>
                        </Fragment>
                    )}
                    {currentUserState.isLoggedIn === false && (
                        <Fragment>
                            <Item location={'/login'} text='Login' />
                        </Fragment>
                    )}
                </div>
                <FontAwesomeIcon icon={faBars} className='top-menu-icon' onClick={setToggleTopMenuClass}/>
                <div className='clear-fix' />
            </div>
        </div>
    )

    async function logout() {
        await firebase.logout()
        dispatch({type: 'SET_UNAUTHORIZED'})
        props.history.push('/')
    }
}
export default  withRouter(TopMenu);